// 213056153 Nadav Sharabi

סיכום קצר על utf-8
utf-8 הינה צורת קידוד של תווים בעזרת unicode (שזו טבלה שמטרתה למפות באופן אוניברסלי תווים למס’ שייצגו אותם).

אופן הפעולה:
utf-8 מקודד כל תו לפי התו עצמו, באופן הבא:
1)אם הערך של התו בין 0 ל- 128:
אזי זהו תו, ASCII, ולכן (מרצון לתאימות אחורה ותמיכה בקבצים שמקודדים ע”י ASCII בבית אחת לתו)נקודד את התו בבית אחד: 7 הסיביות הראשונות בבית יוקדשו לייצוג התו והסיבית האחרונה (ה- MSB) תהיה 0.
2)אחרת:
אחרת הערך של התו גדול מ 127, ונקודד את התו ביותר מבית אחד באופן הבא:
    1. בבית הראשון נרשום (החל מה MSB) 1 כמס' הבתים שבהם התו יקודד ואחריהם נרשום 0. מס' הבתים נקבע לפי ערך התו, באופן הבא:
אם בין 128-2047 2 בתים, אם בין 2048-65535 אז 3 בתים ואם בין65536-1114111 אז ע"י 4 בתים.
      
    2. כל בית נוסף (חוץ מהראשון) יתחיל (מה- MSB) ב-1 ואחריו 0.
    3. כל שאר הסיביות שנותרו פנויות בבתים ישמשו להצגת המס' שמייצג את התו הנ"ל.

הערה: נשים לב שאם יש כמה בתים יוצא שתמיד הסיבית המשתמעותית (ה-MSB) היא 1 וכך ניתן להבדיל בקלות בין קידוד של תו שמיוצג בבית אחד- תו ASCII (בו ה MSB הינו 0) לבין קידוד של תו שמיוצג בכמה בתים.

יתרונות:
    • כפי שאמרנו יש כעת תאימות אחורה לקבצים שהשתמשו בבית אחד לקודד תווי ASCII.
      (מה שאומר שאין הכפלה בייצוג של תווי ASCII).
    • ייצוג אוניברסלי לכמות גדולה של תווים.
    • יחסית חוסכים בגודל הקידוד כי מתאימים את אורך הקידוד לפי גודל המס' המייצג את התו.
    • הקידוד יחסית יעיל (בממוצע)- תווים ששכיחותם גבוהה יותר, הקידוד שלהם קצר יותר (פחות בתים).

חסרונות:
    • הרבה סיביות מהקידוד מוקדשות לציון גודל הבתים המייצגים את התו- הרבה מקום.
      (לדוג’ קידוד של מילים בסינית ויפנית לוקח 3 בתים בעוד שב utf 16 לוקח רק 2).
    • קידוד יותר מבית אחד לכן צריך להתעסק עם endianess.
    • אלגוריתם שמפענח utf-8 שנכתב באופן לא טוב ולא לפי הסטנדרטים העדכניין יכול
      לקבל מס' גרסאות של תווים שנראים חוקיים ב utf 8 מה שיגרום לפרוש לא טוב 
      (בגלל כל הכללים הפירוש נהיה מסובך יותר).
